{
  "env": {
    "es2021": true,
    "es2024": true,
    "es6": true,
    "node": true
  },
  "globals": {},
  "ignorePatterns": [
    "**/node_modules/**",
    "**/bower_components/**",
    "flow-typed/**",
    "coverage/**",
    "{tmp,temp}/**",
    "**/*.min.js",
    "vendor/**",
    "dist/**",
    "distribution/**",
    "tap-snapshots/*.{cjs,js}",
    "test/fixtures/**/*",
    "test/helpers/**/*",
    "test/temp",
    "coverage",
    "test/fixtures/**/*"
  ],
  "parser": "/Users/spencer/Projects/flat-xo/node_modules/@typescript-eslint/parser/dist/index.js",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "project": "/Users/spencer/Projects/flat-xo/tsconfig.json",
    "projectFolderIgnoreList": [{}],
    "sourceType": "module",
    "warnOnUnsupportedTypeScriptVersion": false
  },
  "plugins": [
    "eslint-comments",
    "n",
    "import",
    "unicorn",
    "ava",
    "no-use-extend-native",
    "@typescript-eslint",
    "prettier"
  ],
  "reportUnusedDisableDirectives": true,
  "rules": {
    "@babel/object-curly-spacing": ["off"],
    "@babel/semi": ["off"],
    "@typescript-eslint/adjacent-overload-signatures": ["error"],
    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "array-simple"
      }
    ],
    "@typescript-eslint/await-thenable": ["error"],
    "@typescript-eslint/ban-ts-comment": [
      "error",
      {
        "minimumDescriptionLength": 4,
        "ts-expect-error": "allow-with-description"
      }
    ],
    "@typescript-eslint/ban-tslint-comment": ["error"],
    "@typescript-eslint/ban-types": [
      "error",
      {
        "extendDefaults": false,
        "types": {
          "BigInt": {
            "fixWith": "bigint",
            "message": "Use `bigint` instead."
          },
          "Boolean": {
            "fixWith": "boolean",
            "message": "Use `boolean` instead."
          },
          "Buffer": {
            "message": "Use Uint8Array instead. See: https://sindresorhus.com/blog/goodbye-nodejs-buffer",
            "suggest": ["Uint8Array"]
          },
          "Function": "Use a specific function type instead, like `() => void`.",
          "Number": {
            "fixWith": "number",
            "message": "Use `number` instead."
          },
          "Object": {
            "fixWith": "Record<string, unknown>",
            "message": "The `Object` type is mostly the same as `unknown`. You probably want `Record<string, unknown>` instead. See https://github.com/typescript-eslint/typescript-eslint/pull/848"
          },
          "String": {
            "fixWith": "string",
            "message": "Use `string` instead."
          },
          "Symbol": {
            "fixWith": "symbol",
            "message": "Use `symbol` instead."
          },
          "[[[[[]]]]]": "ðŸ¦„ðŸ’¥",
          "[[[[]]]]": "ur drunk ðŸ¤¡",
          "[[[]]]": "Don't use `[[[]]]`. Use `SomeType[][][]` instead.",
          "[[]]": "Don't use `[[]]`. It only allows an array with a single element which is an empty array. Use `SomeType[][]` instead.",
          "[]": "Don't use the empty array type `[]`. It only allows empty arrays. Use `SomeType[]` instead.",
          "null": {
            "fixWith": "undefined",
            "message": "Use `undefined` instead. See: https://github.com/sindresorhus/meta/issues/7"
          },
          "object": {
            "fixWith": "Record<string, unknown>",
            "message": "The `object` type is hard to use. Use `Record<string, unknown>` instead. See: https://github.com/typescript-eslint/typescript-eslint/pull/848"
          },
          "{}": {
            "fixWith": "Record<string, unknown>",
            "message": "The `{}` type is mostly the same as `unknown`. You probably want `Record<string, unknown>` instead."
          }
        }
      }
    ],
    "@typescript-eslint/block-spacing": ["off"],
    "@typescript-eslint/brace-style": [
      "off",
      "1tbs",
      {
        "allowSingleLine": false
      }
    ],
    "@typescript-eslint/class-literal-property-style": ["error", "getters"],
    "@typescript-eslint/comma-dangle": ["off", "always-multiline"],
    "@typescript-eslint/comma-spacing": [
      "off",
      {
        "after": true,
        "before": false
      }
    ],
    "@typescript-eslint/consistent-generic-constructors": [
      "error",
      "constructor"
    ],
    "@typescript-eslint/consistent-indexed-object-style": ["error"],
    "@typescript-eslint/consistent-type-assertions": [
      "error",
      {
        "assertionStyle": "as",
        "objectLiteralTypeAssertions": "allow-as-parameter"
      }
    ],
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    "@typescript-eslint/consistent-type-exports": [
      "error",
      {
        "fixMixedExportsWithInlineTypeSpecifier": true
      }
    ],
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "fixStyle": "inline-type-imports"
      }
    ],
    "@typescript-eslint/default-param-last": ["error"],
    "@typescript-eslint/dot-notation": ["error"],
    "@typescript-eslint/func-call-spacing": ["off", "never"],
    "@typescript-eslint/indent": [
      "off",
      "tab",
      {
        "SwitchCase": 1,
        "flatTernaryExpressions": false,
        "ignoreComments": false,
        "offsetTernaryExpressions": false
      }
    ],
    "@typescript-eslint/key-spacing": ["off"],
    "@typescript-eslint/keyword-spacing": ["off"],
    "@typescript-eslint/lines-around-comment": [0],
    "@typescript-eslint/lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterOverload": true,
        "exceptAfterSingleLine": true
      }
    ],
    "@typescript-eslint/member-delimiter-style": [
      "off",
      {
        "multiline": {
          "delimiter": "semi",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "semi",
          "requireLast": false
        }
      }
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          "signature",
          "public-static-field",
          "public-static-method",
          "protected-static-field",
          "protected-static-method",
          "private-static-field",
          "private-static-method",
          "static-field",
          "static-method",
          "public-decorated-field",
          "public-instance-field",
          "public-abstract-field",
          "public-field",
          "protected-decorated-field",
          "protected-instance-field",
          "protected-abstract-field",
          "protected-field",
          "private-decorated-field",
          "private-instance-field",
          "private-field",
          "instance-field",
          "abstract-field",
          "decorated-field",
          "field",
          "public-constructor",
          "protected-constructor",
          "private-constructor",
          "constructor",
          "public-decorated-method",
          "public-instance-method",
          "public-abstract-method",
          "public-method",
          "protected-decorated-method",
          "protected-instance-method",
          "protected-abstract-method",
          "protected-method",
          "private-decorated-method",
          "private-instance-method",
          "private-method",
          "instance-method",
          "abstract-method",
          "decorated-method",
          "method"
        ]
      }
    ],
    "@typescript-eslint/naming-convention": [
      "off",
      {
        "filter": {
          "match": false,
          "regex": "[- ]"
        },
        "format": ["strictCamelCase"],
        "leadingUnderscore": "allowSingleOrDouble",
        "selector": [
          "variable",
          "function",
          "classProperty",
          "objectLiteralProperty",
          "parameterProperty",
          "classMethod",
          "objectLiteralMethod",
          "typeMethod",
          "accessor"
        ],
        "trailingUnderscore": "allow"
      },
      {
        "format": ["StrictPascalCase"],
        "selector": "typeLike"
      },
      {
        "format": ["StrictPascalCase"],
        "prefix": ["is", "has", "can", "should", "will", "did"],
        "selector": "variable",
        "types": ["boolean"]
      },
      {
        "filter": "^(?!I)[A-Z]",
        "format": ["StrictPascalCase"],
        "selector": "interface"
      },
      {
        "filter": "^T$|^[A-Z][a-zA-Z]+$",
        "format": ["StrictPascalCase"],
        "selector": "typeParameter"
      },
      {
        "format": null,
        "modifiers": ["requiresQuotes"],
        "selector": ["classProperty", "objectLiteralProperty"]
      }
    ],
    "@typescript-eslint/no-array-constructor": ["error"],
    "@typescript-eslint/no-array-delete": ["error"],
    "@typescript-eslint/no-base-to-string": ["error"],
    "@typescript-eslint/no-confusing-void-expression": ["error"],
    "@typescript-eslint/no-dupe-class-members": ["error"],
    "@typescript-eslint/no-duplicate-enum-values": ["error"],
    "@typescript-eslint/no-duplicate-type-constituents": ["error"],
    "@typescript-eslint/no-dynamic-delete": ["error"],
    "@typescript-eslint/no-empty-function": ["error"],
    "@typescript-eslint/no-empty-interface": [
      "error",
      {
        "allowSingleExtends": true
      }
    ],
    "@typescript-eslint/no-extra-non-null-assertion": ["error"],
    "@typescript-eslint/no-extra-parens": ["off"],
    "@typescript-eslint/no-extra-semi": ["off"],
    "@typescript-eslint/no-extraneous-class": [
      "error",
      {
        "allowConstructorOnly": false,
        "allowEmpty": false,
        "allowStaticOnly": false,
        "allowWithDecorator": true
      }
    ],
    "@typescript-eslint/no-floating-promises": [
      "error",
      {
        "ignoreIIFE": true,
        "ignoreVoid": true
      }
    ],
    "@typescript-eslint/no-for-in-array": ["error"],
    "@typescript-eslint/no-inferrable-types": ["error"],
    "@typescript-eslint/no-loop-func": ["error"],
    "@typescript-eslint/no-loss-of-precision": ["error"],
    "@typescript-eslint/no-meaningless-void-operator": ["error"],
    "@typescript-eslint/no-misused-new": ["error"],
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksConditionals": true,
        "checksVoidReturn": false
      }
    ],
    "@typescript-eslint/no-namespace": ["error"],
    "@typescript-eslint/no-non-null-asserted-nullish-coalescing": ["error"],
    "@typescript-eslint/no-non-null-asserted-optional-chain": ["error"],
    "@typescript-eslint/no-redeclare": ["error"],
    "@typescript-eslint/no-require-imports": ["error"],
    "@typescript-eslint/no-restricted-imports": [
      "error",
      {
        "paths": [
          "error",
          "domain",
          "freelist",
          "smalloc",
          "punycode",
          "sys",
          "querystring",
          "colors"
        ]
      }
    ],
    "@typescript-eslint/no-this-alias": [
      "error",
      {
        "allowDestructuring": true
      }
    ],
    "@typescript-eslint/no-throw-literal": [
      "error",
      {
        "allowThrowingAny": false,
        "allowThrowingUnknown": true
      }
    ],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": ["error"],
    "@typescript-eslint/no-unnecessary-qualifier": ["error"],
    "@typescript-eslint/no-unnecessary-type-arguments": ["error"],
    "@typescript-eslint/no-unnecessary-type-assertion": ["error"],
    "@typescript-eslint/no-unnecessary-type-constraint": ["error"],
    "@typescript-eslint/no-unsafe-argument": ["error"],
    "@typescript-eslint/no-unsafe-assignment": ["error"],
    "@typescript-eslint/no-unsafe-call": ["error"],
    "@typescript-eslint/no-unsafe-declaration-merging": ["error"],
    "@typescript-eslint/no-unsafe-enum-comparison": ["error"],
    "@typescript-eslint/no-unsafe-return": ["error"],
    "@typescript-eslint/no-unused-expressions": ["error"],
    "@typescript-eslint/no-useless-constructor": ["error"],
    "@typescript-eslint/no-useless-empty-export": ["error"],
    "@typescript-eslint/no-var-requires": ["error"],
    "@typescript-eslint/non-nullable-type-assertion-style": ["error"],
    "@typescript-eslint/object-curly-spacing": ["off", "never"],
    "@typescript-eslint/padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "next": "*",
        "prev": "multiline-block-like"
      }
    ],
    "@typescript-eslint/parameter-properties": [
      "error",
      {
        "prefer": "parameter-property"
      }
    ],
    "@typescript-eslint/prefer-as-const": ["error"],
    "@typescript-eslint/prefer-find": ["error"],
    "@typescript-eslint/prefer-for-of": ["error"],
    "@typescript-eslint/prefer-function-type": ["error"],
    "@typescript-eslint/prefer-includes": ["error"],
    "@typescript-eslint/prefer-literal-enum-member": ["error"],
    "@typescript-eslint/prefer-namespace-keyword": ["error"],
    "@typescript-eslint/prefer-nullish-coalescing": [
      "error",
      {
        "ignoreConditionalTests": false,
        "ignoreMixedLogicalExpressions": false,
        "ignoreTernaryTests": false
      }
    ],
    "@typescript-eslint/prefer-optional-chain": ["error"],
    "@typescript-eslint/prefer-promise-reject-errors": ["error"],
    "@typescript-eslint/prefer-readonly": ["error"],
    "@typescript-eslint/prefer-reduce-type-parameter": ["error"],
    "@typescript-eslint/prefer-regexp-exec": ["error"],
    "@typescript-eslint/prefer-return-this-type": ["error"],
    "@typescript-eslint/prefer-string-starts-ends-with": ["error"],
    "@typescript-eslint/prefer-ts-expect-error": ["error"],
    "@typescript-eslint/promise-function-async": ["error"],
    "@typescript-eslint/quotes": [0, "single"],
    "@typescript-eslint/require-array-sort-compare": [
      "error",
      {
        "ignoreStringArrays": true
      }
    ],
    "@typescript-eslint/restrict-plus-operands": [
      "error",
      {
        "allowAny": false
      }
    ],
    "@typescript-eslint/restrict-template-expressions": [
      "error",
      {
        "allowNumber": true
      }
    ],
    "@typescript-eslint/return-await": ["error"],
    "@typescript-eslint/semi": ["off", "always"],
    "@typescript-eslint/space-before-blocks": ["off", "always"],
    "@typescript-eslint/space-before-function-paren": [
      "off",
      {
        "anonymous": "always",
        "asyncArrow": "always",
        "named": "never"
      }
    ],
    "@typescript-eslint/space-infix-ops": ["off"],
    "@typescript-eslint/switch-exhaustiveness-check": [
      "error",
      {
        "allowDefaultCaseForExhaustiveSwitch": false,
        "requireDefaultForNonUnion": true
      }
    ],
    "@typescript-eslint/triple-slash-reference": [
      "error",
      {
        "lib": "never",
        "path": "never",
        "types": "never"
      }
    ],
    "@typescript-eslint/type-annotation-spacing": ["off"],
    "@typescript-eslint/unified-signatures": [
      "error",
      {
        "ignoreDifferentlyNamedParameters": true
      }
    ],
    "accessor-pairs": [
      "error",
      {
        "enforceForClassMembers": true,
        "getWithoutSet": false,
        "setWithoutGet": true
      }
    ],
    "array-bracket-newline": ["off", "consistent"],
    "array-bracket-spacing": ["off", "never"],
    "array-callback-return": [
      "error",
      {
        "allowImplicit": true,
        "allowVoid": false,
        "checkForEach": false
      }
    ],
    "array-element-newline": ["off", "consistent"],
    "arrow-body-style": ["off"],
    "arrow-parens": ["off", "as-needed"],
    "arrow-spacing": [
      "off",
      {
        "after": true,
        "before": true
      }
    ],
    "ava/assertion-arguments": ["error"],
    "ava/hooks-order": ["error"],
    "ava/max-asserts": ["off", 5],
    "ava/no-async-fn-without-await": ["error"],
    "ava/no-duplicate-modifiers": ["error"],
    "ava/no-identical-title": ["error"],
    "ava/no-ignored-test-files": ["off"],
    "ava/no-import-test-files": ["error"],
    "ava/no-incorrect-deep-equal": ["error"],
    "ava/no-inline-assertions": ["error"],
    "ava/no-nested-tests": ["error"],
    "ava/no-only-test": ["error"],
    "ava/no-skip-assert": ["error"],
    "ava/no-skip-test": ["error"],
    "ava/no-todo-implementation": ["error"],
    "ava/no-todo-test": ["warn"],
    "ava/no-unknown-modifiers": ["error"],
    "ava/prefer-async-await": ["error"],
    "ava/prefer-power-assert": ["off"],
    "ava/prefer-t-regex": ["error"],
    "ava/test-title": ["error"],
    "ava/test-title-format": ["off"],
    "ava/use-t": ["error"],
    "ava/use-t-throws-async-well": ["error"],
    "ava/use-t-well": ["error"],
    "ava/use-test": ["error"],
    "ava/use-true-false": ["error"],
    "babel/object-curly-spacing": ["off"],
    "babel/quotes": [0],
    "babel/semi": ["off"],
    "block-scoped-var": ["error"],
    "block-spacing": ["off"],
    "brace-style": [
      "off",
      "1tbs",
      {
        "allowSingleLine": false
      }
    ],
    "camelcase": [
      "off",
      {
        "ignoreDestructuring": false,
        "ignoreGlobals": false,
        "ignoreImports": false,
        "properties": "always"
      }
    ],
    "capitalized-comments": [
      "off",
      "always",
      {
        "ignoreConsecutiveComments": true,
        "ignoreInlineComments": true,
        "ignorePattern": "pragma|ignore|prettier-ignore|webpack\\w+:|c8|type-coverage:"
      }
    ],
    "comma-dangle": ["off", "always-multiline"],
    "comma-spacing": [
      "off",
      {
        "after": true,
        "before": false
      }
    ],
    "comma-style": ["off", "last"],
    "complexity": ["warn"],
    "computed-property-spacing": [
      "off",
      "never",
      {
        "enforceForClassMembers": true
      }
    ],
    "constructor-super": ["error"],
    "curly": [0],
    "default-case": ["off"],
    "default-case-last": ["error"],
    "default-param-last": ["off"],
    "dot-location": ["off", "property"],
    "dot-notation": ["off"],
    "eol-last": ["off"],
    "eqeqeq": ["error"],
    "eslint-comments/disable-enable-pair": [
      "error",
      {
        "allowWholeFile": true
      }
    ],
    "eslint-comments/no-aggregating-enable": ["error"],
    "eslint-comments/no-duplicate-disable": ["error"],
    "eslint-comments/no-unused-disable": ["error"],
    "eslint-comments/no-unused-enable": ["error"],
    "flowtype/boolean-style": ["off"],
    "flowtype/delimiter-dangle": ["off"],
    "flowtype/generic-spacing": ["off"],
    "flowtype/object-type-curly-spacing": ["off"],
    "flowtype/object-type-delimiter": ["off"],
    "flowtype/quotes": ["off"],
    "flowtype/semi": ["off"],
    "flowtype/space-after-type-colon": ["off"],
    "flowtype/space-before-generic-bracket": ["off"],
    "flowtype/space-before-type-colon": ["off"],
    "flowtype/union-intersection-spacing": ["off"],
    "for-direction": ["error"],
    "func-call-spacing": ["off", "never"],
    "func-name-matching": [
      "error",
      {
        "considerPropertyDescriptor": true
      }
    ],
    "func-names": ["error", "never"],
    "function-call-argument-newline": ["off", "consistent"],
    "function-paren-newline": ["off"],
    "generator-star": ["off"],
    "generator-star-spacing": ["off", "both"],
    "getter-return": ["error"],
    "grouped-accessor-pairs": ["error", "getBeforeSet"],
    "guard-for-in": ["error"],
    "implicit-arrow-linebreak": ["off"],
    "import/default": ["off"],
    "import/export": ["off"],
    "import/extensions": [
      "error",
      "always",
      {
        "ignorePackages": true
      }
    ],
    "import/first": ["error"],
    "import/named": ["off"],
    "import/namespace": [
      "off",
      {
        "allowComputed": true
      }
    ],
    "import/newline-after-import": ["error", {}],
    "import/no-absolute-path": ["error"],
    "import/no-amd": ["error"],
    "import/no-anonymous-default-export": ["error"],
    "import/no-cycle": [
      "error",
      {
        "allowUnsafeDynamicCyclicDependency": false,
        "ignoreExternal": true
      }
    ],
    "import/no-duplicates": [
      "error",
      {
        "prefer-inline": true
      }
    ],
    "import/no-empty-named-blocks": ["error"],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "includeTypes": true
      }
    ],
    "import/no-mutable-exports": ["error"],
    "import/no-named-as-default": ["error"],
    "import/no-named-as-default-member": ["error"],
    "import/no-named-default": ["error"],
    "import/no-self-import": ["error"],
    "import/no-unassigned-import": [
      "error",
      {
        "allow": [
          "@babel/polyfill",
          "**/register",
          "**/register.*",
          "**/register/**",
          "**/register/**.*",
          "**/*.css",
          "**/*.scss",
          "**/*.sass",
          "**/*.less"
        ]
      }
    ],
    "import/no-useless-path-segments": ["error"],
    "import/no-webpack-loader-syntax": ["error"],
    "import/order": [
      "error",
      {
        "distinctGroup": true,
        "groups": ["builtin", "external", "parent", "sibling", "index"],
        "newlines-between": "never",
        "warnOnUnassignedImports": true
      }
    ],
    "indent": [
      "off",
      "tab",
      {
        "SwitchCase": 1,
        "flatTernaryExpressions": false,
        "ignoreComments": false,
        "offsetTernaryExpressions": false
      }
    ],
    "indent-legacy": ["off"],
    "jsx-quotes": ["off", "prefer-single"],
    "key-spacing": [
      "off",
      {
        "afterColon": true,
        "beforeColon": false
      }
    ],
    "keyword-spacing": ["off"],
    "linebreak-style": ["off", "unix"],
    "lines-around-comment": [0],
    "lines-between-class-members": [
      "off",
      "always",
      {
        "exceptAfterSingleLine": true
      }
    ],
    "logical-assignment-operators": [
      "error",
      "always",
      {
        "enforceForIfStatements": true
      }
    ],
    "max-depth": ["warn"],
    "max-len": [0],
    "max-nested-callbacks": ["warn", 4],
    "max-params": [
      "warn",
      {
        "max": 4
      }
    ],
    "max-statements-per-line": ["off"],
    "multiline-ternary": ["off"],
    "n/file-extension-in-import": [
      "error",
      "always",
      {
        ".cts": "never",
        ".mts": "never",
        ".ts": "never",
        ".tsx": "never"
      }
    ],
    "n/no-deprecated-api": ["error"],
    "n/no-mixed-requires": [
      "error",
      {
        "allowCall": true,
        "grouping": true
      }
    ],
    "n/no-new-require": ["error"],
    "n/no-path-concat": ["error"],
    "n/no-unpublished-bin": ["error"],
    "n/prefer-global/console": ["error", "always"],
    "n/prefer-global/process": ["error", "never"],
    "n/prefer-global/text-decoder": ["off", "always"],
    "n/prefer-global/text-encoder": ["off", "always"],
    "n/prefer-global/url": ["off", "always"],
    "n/prefer-global/url-search-params": ["off", "always"],
    "n/prefer-promises/dns": ["off"],
    "n/prefer-promises/fs": ["off"],
    "n/process-exit-as-throw": ["error"],
    "new-cap": [
      "error",
      {
        "capIsNew": true,
        "newIsCap": true,
        "properties": true
      }
    ],
    "new-parens": ["off"],
    "newline-per-chained-call": ["off"],
    "no-alert": ["error"],
    "no-array-constructor": ["off"],
    "no-arrow-condition": ["off"],
    "no-async-promise-executor": ["error"],
    "no-await-in-loop": ["error"],
    "no-bitwise": ["error"],
    "no-buffer-constructor": ["error"],
    "no-caller": ["error"],
    "no-case-declarations": ["error"],
    "no-class-assign": ["error"],
    "no-comma-dangle": ["off"],
    "no-compare-neg-zero": ["error"],
    "no-cond-assign": ["error"],
    "no-confusing-arrow": [0],
    "no-const-assign": ["error"],
    "no-constant-binary-expression": ["error"],
    "no-constant-condition": ["error"],
    "no-constructor-return": ["error"],
    "no-control-regex": ["error"],
    "no-debugger": ["error"],
    "no-delete-var": ["error"],
    "no-dupe-args": ["error"],
    "no-dupe-class-members": ["off"],
    "no-dupe-else-if": ["error"],
    "no-dupe-keys": ["error"],
    "no-duplicate-case": ["error"],
    "no-duplicate-imports": ["off"],
    "no-else-return": [
      "error",
      {
        "allowElseIf": false
      }
    ],
    "no-empty": [
      "error",
      {
        "allowEmptyCatch": true
      }
    ],
    "no-empty-character-class": ["error"],
    "no-empty-function": ["off"],
    "no-empty-pattern": ["error"],
    "no-empty-static-block": ["error"],
    "no-eq-null": ["error"],
    "no-eval": ["error"],
    "no-ex-assign": ["error"],
    "no-extend-native": ["error"],
    "no-extra-bind": ["error"],
    "no-extra-boolean-cast": ["error"],
    "no-extra-label": ["error"],
    "no-extra-parens": ["off"],
    "no-extra-semi": ["off"],
    "no-fallthrough": ["error"],
    "no-floating-decimal": ["off"],
    "no-func-assign": ["error"],
    "no-global-assign": ["error"],
    "no-implicit-coercion": ["error"],
    "no-implicit-globals": ["error"],
    "no-implied-eval": ["error"],
    "no-import-assign": ["error"],
    "no-inner-declarations": ["error"],
    "no-invalid-regexp": ["error"],
    "no-irregular-whitespace": ["error"],
    "no-iterator": ["error"],
    "no-label-var": ["error"],
    "no-labels": ["error"],
    "no-lone-blocks": ["error"],
    "no-lonely-if": ["error"],
    "no-loop-func": ["off"],
    "no-loss-of-precision": ["off"],
    "no-misleading-character-class": ["error"],
    "no-mixed-operators": [0],
    "no-mixed-spaces-and-tabs": ["off"],
    "no-multi-assign": ["error"],
    "no-multi-spaces": ["off"],
    "no-multi-str": ["error"],
    "no-multiple-empty-lines": [
      "off",
      {
        "max": 1
      }
    ],
    "no-negated-condition": ["off"],
    "no-nested-ternary": ["off"],
    "no-new": ["error"],
    "no-new-func": ["error"],
    "no-new-native-nonconstructor": ["error"],
    "no-new-wrappers": ["error"],
    "no-nonoctal-decimal-escape": ["error"],
    "no-obj-calls": ["error"],
    "no-object-constructor": ["error"],
    "no-octal": ["error"],
    "no-octal-escape": ["error"],
    "no-promise-executor-return": ["error"],
    "no-proto": ["error"],
    "no-prototype-builtins": ["error"],
    "no-redeclare": ["off"],
    "no-regex-spaces": ["error"],
    "no-reserved-keys": ["off"],
    "no-restricted-globals": [
      "error",
      "event",
      {
        "message": "This API is deprecated. Use https://github.com/sindresorhus/uint8array-extras instead.",
        "name": "atob"
      },
      {
        "message": "This API is deprecated. Use https://github.com/sindresorhus/uint8array-extras instead.",
        "name": "btoa"
      }
    ],
    "no-restricted-imports": [
      "off",
      "domain",
      "freelist",
      "smalloc",
      "punycode",
      "sys",
      "querystring",
      "colors"
    ],
    "no-return-assign": ["error", "always"],
    "no-return-await": ["error"],
    "no-script-url": ["error"],
    "no-self-assign": [
      "error",
      {
        "props": true
      }
    ],
    "no-self-compare": ["error"],
    "no-sequences": ["error"],
    "no-setter-return": ["error"],
    "no-shadow-restricted-names": ["error"],
    "no-space-before-semi": ["off"],
    "no-spaced-func": ["off"],
    "no-sparse-arrays": ["error"],
    "no-tabs": [0],
    "no-template-curly-in-string": ["error"],
    "no-this-before-super": ["error"],
    "no-throw-literal": ["off"],
    "no-trailing-spaces": ["off"],
    "no-undef": [
      "off",
      {
        "typeof": true
      }
    ],
    "no-undef-init": ["error"],
    "no-unexpected-multiline": [0],
    "no-unmodified-loop-condition": ["error"],
    "no-unneeded-ternary": ["error"],
    "no-unreachable": ["error"],
    "no-unreachable-loop": ["error"],
    "no-unsafe-finally": ["error"],
    "no-unsafe-negation": [
      "error",
      {
        "enforceForOrderingRelations": true
      }
    ],
    "no-unsafe-optional-chaining": [
      "error",
      {
        "disallowArithmeticOperators": true
      }
    ],
    "no-unused-expressions": [
      "off",
      {
        "allowShortCircuit": false,
        "allowTaggedTemplates": false,
        "allowTernary": false,
        "enforceForJSX": true
      }
    ],
    "no-unused-labels": ["error"],
    "no-unused-vars": [
      "off",
      {
        "args": "after-used",
        "argsIgnorePattern": "^_",
        "caughtErrors": "all",
        "caughtErrorsIgnorePattern": "^_$",
        "ignoreRestSiblings": true,
        "vars": "all",
        "varsIgnorePattern": "^_"
      }
    ],
    "no-use-extend-native/no-use-extend-native": ["error"],
    "no-useless-backreference": ["error"],
    "no-useless-call": ["error"],
    "no-useless-catch": ["off"],
    "no-useless-computed-key": [
      "error",
      {
        "enforceForClassMembers": true
      }
    ],
    "no-useless-concat": ["error"],
    "no-useless-constructor": ["off"],
    "no-useless-escape": ["error"],
    "no-useless-rename": ["error"],
    "no-useless-return": ["error"],
    "no-var": ["error"],
    "no-void": [
      "error",
      {
        "allowAsStatement": true
      }
    ],
    "no-warning-comments": ["warn"],
    "no-whitespace-before-property": ["off"],
    "no-with": ["error"],
    "no-wrap-func": ["off"],
    "node/file-extension-in-import": ["off"],
    "node/no-unsupported-features/es-builtins": ["off"],
    "node/no-unsupported-features/es-syntax": ["off"],
    "nonblock-statement-body-position": ["off"],
    "object-curly-newline": [
      "off",
      {
        "ExportDeclaration": {
          "consistent": true,
          "minProperties": 4,
          "multiline": true
        },
        "ImportDeclaration": {
          "consistent": true,
          "minProperties": 4,
          "multiline": true
        },
        "ObjectExpression": {
          "consistent": true,
          "minProperties": 4,
          "multiline": true
        },
        "ObjectPattern": {
          "consistent": true,
          "multiline": true
        }
      }
    ],
    "object-curly-spacing": ["off", "never"],
    "object-property-newline": ["off"],
    "object-shorthand": [
      "error",
      "always",
      {
        "avoidExplicitReturnArrows": true
      }
    ],
    "one-var": ["error", "never"],
    "one-var-declaration-per-line": ["off"],
    "operator-assignment": ["error", "always"],
    "operator-linebreak": ["off", "before"],
    "padded-blocks": [
      "off",
      "never",
      {
        "allowSingleLineBlocks": false
      }
    ],
    "padding-line-between-statements": [
      "off",
      {
        "blankLine": "always",
        "next": "*",
        "prev": "multiline-block-like"
      }
    ],
    "prefer-arrow-callback": [
      "off",
      {
        "allowNamedFunctions": true,
        "allowUnboundThis": true
      }
    ],
    "prefer-const": [
      "error",
      {
        "destructuring": "all",
        "ignoreReadBeforeAssign": false
      }
    ],
    "prefer-destructuring": [
      "off",
      {
        "AssignmentExpression": {
          "array": false,
          "object": false
        },
        "VariableDeclarator": {
          "array": false,
          "object": true
        }
      },
      {
        "enforceForRenamedProperties": false
      }
    ],
    "prefer-exponentiation-operator": ["error"],
    "prefer-named-capture-group": ["off"],
    "prefer-numeric-literals": ["error"],
    "prefer-object-has-own": ["error"],
    "prefer-object-spread": ["off"],
    "prefer-promise-reject-errors": [
      "off",
      {
        "allowEmptyReject": true
      }
    ],
    "prefer-regex-literals": [
      "error",
      {
        "disallowRedundantWrapping": true
      }
    ],
    "prefer-rest-params": ["off"],
    "prefer-spread": ["error"],
    "prettier/prettier": [
      "error",
      {
        "bracketSameLine": false,
        "bracketSpacing": false,
        "endOfLine": "lf",
        "plugins": ["prettier-plugin-packagejson"],
        "semi": true,
        "singleQuote": true,
        "tabWidth": 2,
        "trailingComma": "all",
        "useTabs": false
      }
    ],
    "promise/prefer-await-to-then": ["off"],
    "quote-props": ["off", "as-needed"],
    "quotes": [0, "single"],
    "radix": ["error"],
    "react/jsx-child-element-spacing": ["off"],
    "react/jsx-closing-bracket-location": ["off"],
    "react/jsx-closing-tag-location": ["off"],
    "react/jsx-curly-newline": ["off"],
    "react/jsx-curly-spacing": ["off"],
    "react/jsx-equals-spacing": ["off"],
    "react/jsx-first-prop-new-line": ["off"],
    "react/jsx-indent": ["off"],
    "react/jsx-indent-props": ["off"],
    "react/jsx-max-props-per-line": ["off"],
    "react/jsx-newline": ["off"],
    "react/jsx-one-expression-per-line": ["off"],
    "react/jsx-props-no-multi-spaces": ["off"],
    "react/jsx-space-before-closing": ["off"],
    "react/jsx-tag-spacing": ["off"],
    "react/jsx-wrap-multilines": ["off"],
    "require-yield": ["error"],
    "rest-spread-spacing": ["off", "never"],
    "semi": ["off", "always"],
    "semi-spacing": [
      "off",
      {
        "after": true,
        "before": false
      }
    ],
    "semi-style": ["off", "last"],
    "space-after-function-name": ["off"],
    "space-after-keywords": ["off"],
    "space-before-blocks": ["off", "always"],
    "space-before-function-paren": [
      "off",
      {
        "anonymous": "always",
        "asyncArrow": "always",
        "named": "never"
      }
    ],
    "space-before-function-parentheses": ["off"],
    "space-before-keywords": ["off"],
    "space-in-brackets": ["off"],
    "space-in-parens": ["off", "never"],
    "space-infix-ops": ["off"],
    "space-return-throw-case": ["off"],
    "space-unary-ops": ["off"],
    "space-unary-word-ops": ["off"],
    "spaced-comment": [
      "error",
      "always",
      {
        "block": {
          "balanced": true,
          "exceptions": ["-", "+", "*"],
          "markers": ["!", "*"]
        },
        "line": {
          "exceptions": ["-", "+", "*"],
          "markers": ["!", "/", "=>"]
        }
      }
    ],
    "standard/array-bracket-even-spacing": ["off"],
    "standard/computed-property-even-spacing": ["off"],
    "standard/object-curly-even-spacing": ["off"],
    "switch-colon-spacing": [
      "off",
      {
        "after": true,
        "before": false
      }
    ],
    "symbol-description": ["error"],
    "template-curly-spacing": ["off"],
    "template-tag-spacing": ["off", "never"],
    "unicode-bom": ["error", "never"],
    "unicorn/better-regex": [
      "error",
      {
        "sortCharacterClasses": false
      }
    ],
    "unicorn/catch-error-name": ["error"],
    "unicorn/consistent-destructuring": ["off"],
    "unicorn/consistent-function-scoping": ["off"],
    "unicorn/custom-error-definition": ["off"],
    "unicorn/empty-brace-spaces": ["off"],
    "unicorn/error-message": ["error"],
    "unicorn/escape-case": ["error"],
    "unicorn/expiring-todo-comments": ["error"],
    "unicorn/explicit-length-check": ["error"],
    "unicorn/filename-case": ["error"],
    "unicorn/import-style": ["off"],
    "unicorn/new-for-builtins": ["error"],
    "unicorn/no-abusive-eslint-disable": ["error"],
    "unicorn/no-array-callback-reference": ["error"],
    "unicorn/no-array-for-each": ["error"],
    "unicorn/no-array-method-this-argument": ["error"],
    "unicorn/no-array-push-push": ["error"],
    "unicorn/no-array-reduce": ["error"],
    "unicorn/no-await-expression-member": ["error"],
    "unicorn/no-console-spaces": ["error"],
    "unicorn/no-document-cookie": ["error"],
    "unicorn/no-empty-file": ["off"],
    "unicorn/no-for-loop": ["error"],
    "unicorn/no-hex-escape": ["error"],
    "unicorn/no-instanceof-array": ["error"],
    "unicorn/no-invalid-remove-event-listener": ["error"],
    "unicorn/no-keyword-prefix": ["off"],
    "unicorn/no-lonely-if": ["error"],
    "unicorn/no-negated-condition": ["error"],
    "unicorn/no-nested-ternary": ["off"],
    "unicorn/no-new-array": ["error"],
    "unicorn/no-new-buffer": ["off"],
    "unicorn/no-null": ["off"],
    "unicorn/no-object-as-default-parameter": ["error"],
    "unicorn/no-process-exit": ["error"],
    "unicorn/no-static-only-class": ["error"],
    "unicorn/no-thenable": ["error"],
    "unicorn/no-this-assignment": ["error"],
    "unicorn/no-typeof-undefined": ["error"],
    "unicorn/no-unnecessary-await": ["error"],
    "unicorn/no-unnecessary-polyfills": ["error"],
    "unicorn/no-unreadable-array-destructuring": ["error"],
    "unicorn/no-unreadable-iife": ["error"],
    "unicorn/no-unused-properties": ["off"],
    "unicorn/no-useless-fallback-in-spread": ["error"],
    "unicorn/no-useless-length-check": ["error"],
    "unicorn/no-useless-promise-resolve-reject": ["error"],
    "unicorn/no-useless-spread": ["error"],
    "unicorn/no-useless-switch-case": ["error"],
    "unicorn/no-useless-undefined": ["off"],
    "unicorn/no-zero-fractions": ["error"],
    "unicorn/number-literal-case": ["off"],
    "unicorn/numeric-separators-style": ["error"],
    "unicorn/prefer-add-event-listener": ["error"],
    "unicorn/prefer-array-find": ["error"],
    "unicorn/prefer-array-flat": ["error"],
    "unicorn/prefer-array-flat-map": ["error"],
    "unicorn/prefer-array-index-of": ["error"],
    "unicorn/prefer-array-some": ["error"],
    "unicorn/prefer-at": ["error"],
    "unicorn/prefer-blob-reading-methods": ["error"],
    "unicorn/prefer-code-point": ["error"],
    "unicorn/prefer-date-now": ["error"],
    "unicorn/prefer-default-parameters": ["error"],
    "unicorn/prefer-dom-node-append": ["error"],
    "unicorn/prefer-dom-node-dataset": ["error"],
    "unicorn/prefer-dom-node-remove": ["error"],
    "unicorn/prefer-dom-node-text-content": ["error"],
    "unicorn/prefer-event-target": ["error"],
    "unicorn/prefer-export-from": ["error"],
    "unicorn/prefer-flat-map": ["off"],
    "unicorn/prefer-includes": ["error"],
    "unicorn/prefer-json-parse-buffer": ["off"],
    "unicorn/prefer-keyboard-event-key": ["error"],
    "unicorn/prefer-logical-operator-over-ternary": ["error"],
    "unicorn/prefer-math-trunc": ["error"],
    "unicorn/prefer-modern-dom-apis": ["error"],
    "unicorn/prefer-modern-math-apis": ["error"],
    "unicorn/prefer-module": ["error"],
    "unicorn/prefer-native-coercion-functions": ["error"],
    "unicorn/prefer-negative-index": ["error"],
    "unicorn/prefer-node-protocol": ["error"],
    "unicorn/prefer-number-properties": ["error"],
    "unicorn/prefer-object-from-entries": ["error"],
    "unicorn/prefer-optional-catch-binding": ["error"],
    "unicorn/prefer-prototype-methods": ["error"],
    "unicorn/prefer-query-selector": ["error"],
    "unicorn/prefer-reflect-apply": ["error"],
    "unicorn/prefer-regexp-test": ["error"],
    "unicorn/prefer-set-has": ["error"],
    "unicorn/prefer-set-size": ["error"],
    "unicorn/prefer-spread": ["off"],
    "unicorn/prefer-string-replace-all": ["error"],
    "unicorn/prefer-string-slice": ["error"],
    "unicorn/prefer-string-starts-ends-with": ["error"],
    "unicorn/prefer-string-trim-start-end": ["error"],
    "unicorn/prefer-switch": ["error"],
    "unicorn/prefer-ternary": ["error", "only-single-line"],
    "unicorn/prefer-top-level-await": ["error"],
    "unicorn/prefer-type-error": ["error"],
    "unicorn/prevent-abbreviations": [
      "error",
      {
        "checkDefaultAndNamespaceImports": false,
        "checkFilenames": false,
        "checkShorthandImports": false,
        "extendDefaultReplacements": true,
        "replacements": {
          "anim": {
            "animation": true
          },
          "application": {
            "app": true
          },
          "applications": {
            "apps": true
          },
          "bin": {
            "binary": true
          },
          "blacklist": {
            "exclude": true
          },
          "calc": {
            "calculate": true
          },
          "dict": {
            "dictionary": true
          },
          "dup": {
            "duplicate": true
          },
          "enc": {
            "encode": true,
            "encryption": true
          },
          "env": false,
          "eof": {
            "endOfFile": true
          },
          "gen": {
            "general": true,
            "generate": true
          },
          "gfx": {
            "graphics": true
          },
          "i": false,
          "impl": {
            "implement": true,
            "implementation": true
          },
          "inc": {
            "increment": true
          },
          "iter": {
            "iterate": true,
            "iterator": true
          },
          "master": {
            "main": true
          },
          "nav": {
            "navigate": true,
            "navigation": true
          },
          "norm": {
            "normalize": true
          },
          "notif": {
            "notification": true
          },
          "perf": {
            "performance": true
          },
          "proc": {
            "process": true
          },
          "rand": {
            "random": true
          },
          "slave": {
            "secondary": true
          },
          "sys": {
            "system": true
          },
          "temp": {
            "temporary": true
          },
          "whitelist": {
            "include": true
          }
        }
      }
    ],
    "unicorn/relative-url-style": ["error"],
    "unicorn/require-array-join-separator": ["error"],
    "unicorn/require-number-to-fixed-digits-argument": ["error"],
    "unicorn/require-post-message-target-origin": ["off"],
    "unicorn/string-content": ["off"],
    "unicorn/switch-case-braces": ["error"],
    "unicorn/template-indent": [0],
    "unicorn/text-encoding-identifier-case": ["error"],
    "unicorn/throw-new-error": ["error"],
    "use-isnan": ["error"],
    "valid-typeof": [
      "error",
      {
        "requireStringLiterals": false
      }
    ],
    "vue/array-bracket-newline": ["off"],
    "vue/array-bracket-spacing": ["off"],
    "vue/array-element-newline": ["off"],
    "vue/arrow-spacing": ["off"],
    "vue/block-spacing": ["off"],
    "vue/block-tag-newline": ["off"],
    "vue/brace-style": ["off"],
    "vue/comma-dangle": ["off"],
    "vue/comma-spacing": ["off"],
    "vue/comma-style": ["off"],
    "vue/dot-location": ["off"],
    "vue/func-call-spacing": ["off"],
    "vue/html-closing-bracket-newline": ["off"],
    "vue/html-closing-bracket-spacing": ["off"],
    "vue/html-end-tags": ["off"],
    "vue/html-indent": ["off"],
    "vue/html-quotes": ["off"],
    "vue/html-self-closing": [0],
    "vue/key-spacing": ["off"],
    "vue/keyword-spacing": ["off"],
    "vue/max-attributes-per-line": ["off"],
    "vue/max-len": [0],
    "vue/multiline-html-element-content-newline": ["off"],
    "vue/multiline-ternary": ["off"],
    "vue/mustache-interpolation-spacing": ["off"],
    "vue/no-extra-parens": ["off"],
    "vue/no-multi-spaces": ["off"],
    "vue/no-spaces-around-equal-signs-in-attribute": ["off"],
    "vue/object-curly-newline": ["off"],
    "vue/object-curly-spacing": ["off"],
    "vue/object-property-newline": ["off"],
    "vue/operator-linebreak": ["off"],
    "vue/quote-props": ["off"],
    "vue/script-indent": ["off"],
    "vue/singleline-html-element-content-newline": ["off"],
    "vue/space-in-parens": ["off"],
    "vue/space-infix-ops": ["off"],
    "vue/space-unary-ops": ["off"],
    "vue/template-curly-spacing": ["off"],
    "wrap-iife": [
      "off",
      "inside",
      {
        "functionPrototypeMethods": true
      }
    ],
    "wrap-regex": ["off"],
    "yield-star-spacing": ["off", "both"],
    "yoda": ["error"]
  },
  "settings": {
    "import/core-modules": ["electron", "atom"],
    "import/parsers": {
      "/Users/spencer/Projects/flat-xo/node_modules/@typescript-eslint/parser/dist/index.js": [
        ".ts",
        ".tsx"
      ]
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  }
}
